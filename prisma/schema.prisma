// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique @db.VarChar(50)
  password    String    @db.VarChar(255)
  name        String    @db.VarChar(100)
  role        String    @db.VarChar(20)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  restaurants Restaurant[]
  reviews     Review[]
  comments    Comment[]

  @@map("users")
}

model Restaurant {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(100)
  description  String     @db.Text
  photo_url    String     @db.VarChar(255)
  location     String     @db.VarChar(100)
  maps_url     String     @db.VarChar(255)
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  user_id      Int

  user         User       @relation(fields: [user_id], references: [id])
  reviews      Review[]

  @@map("restaurants")
}

model Review {
  id              Int         @id @default(autoincrement())
  title           String      @db.VarChar(100)
  text            String      @db.Text
  rating          Int
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  user_id         Int
  restaurant_id   Int

  user            User        @relation(fields: [user_id], references: [id])
  restaurant      Restaurant  @relation(fields: [restaurant_id], references: [id])
  comments        Comment[]

  @@map("reviews")
}

model Comment {
  id          Int        @id @default(autoincrement())
  text        String     @db.Text
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  user_id     Int
  review_id   Int

  user        User       @relation(fields: [user_id], references: [id])
  review      Review     @relation(fields: [review_id], references: [id])

  @@map("comments")
}
